services:

  certmaker:
    image: alpine:3.18
    command:
      - /bin/sh
      - /deploy/make_certs.sh
    volumes:
      - ./deploy/make_certs.sh:/deploy/make_certs.sh
      - certs:/certs

  htsget:
    build:
      context: .
      dockerfile: deploy/Dockerfile
    image: htsget-rs:latest
    command: ["htsget-actix", "--config", "/config/minio-config.toml"]
    depends_on:
      certmaker:
        condition: service_completed_successfully
    ports:
      - 8088:8080
    environment:
      - FORMATTING_STYLE=Pretty
      - RUST_LOG=debug
      - AWS_REGION=eu-east-1
      - AWS_ACCESS_KEY_ID=access
      - AWS_SECRET_ACCESS_KEY=secretkey
    volumes:
      - ./deploy/config:/config/
      - certs:/certs
    networks:
      - starter-kit-storage-and-interfaces_secure
    # extra_hosts:
    # - dockerhost:host-gateway

#  s3:
#    image: minio/minio:RELEASE.2023-04-20T17-56-55Z
#    command: server /data  --console-address ":9001"
#    environment:
#      - MINIO_DOMAIN=s3
#      - MINIO_ROOT_USER=access
#      - MINIO_ROOT_PASSWORD=secretkey
#      - MINIO_SERVER_URL=http://127.0.0.1:9000
#    healthcheck:
#      test: ["CMD", "curl", "-fkq", "http://localhost:9000/minio/health/live"]
#      interval: 5s
#      timeout: 20s
#      retries: 3
#    networks:
#      default:
#        aliases:
#          - archive.s3
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    volumes:
#      - s3data:/data
#
#  dataloader:
#    image: minio/mc:RELEASE.2023-04-12T02-21-51Z
#    depends_on:
#      s3:
#        condition: service_healthy
#    entrypoint: >
#      /bin/sh -c "
#      mc config host add s3 http://s3:9000 access secretkey;
#      mc mb -p s3/archive;
#      mc anonymous set public s3/archive/;
#      mc mirror /data s3/archive;
#      "
#    volumes:
#      - ./data:/data
  
volumes:
  certs:
  #s3data:
networks:
   starter-kit-storage-and-interfaces_secure:
     external: true
